#include <iostream>
#include <vector>
#include <cstdio>
#include <string>
#include <map>
using namespace std;

void heapify(vector<pair<string, int>> &v, int pos, int h, int &cnt){
	int j;
	while(2*pos+1 < h){
		j = 2*pos + 1;
		int strcomp;
		if((j + 1 < h) && (v[j+1].first > v[j].first)){
			j++;
		}
		if(v[j].first > v[pos].first){
			swap(v[j].second, v[pos].second);
			pos = j;
			cnt++;
		}
		else break;
	}
}

void heapsort(vector<pair<string, int>> &v, int h, int &cnt){
	for (int i = h - 1; i >= 0; i--)
    {
        heapify(v, i, h, cnt);
    }
	
    for (int i = h - 1; i > 1; i--)
	{
		swap(v[0].second, v[i].second);
		heapify(v, 0, i, cnt);
	}
}

int main(){
	int n, d, h, cnt = 0;
	string s;
	scanf("%d", &n);
	vector<pair<string, int>> a;
	for(int i = 0; i < n; ++i){
		//getline(cin, s);
		cin >> s;
		a.push_back(pair<string, int>(s, i));
	}
	h = a.size();
	heapsort(a, h, cnt);
	cout << "Initial" << endl;
	for(auto it = a.begin(); it != a.end(); ++it)
		cout << it->first << " : " << it->second+1 << endl;
	//printf("%d", cnt);
	cout << "sorted" << endl;
	return 0;
}
