#include <vector>
#include <iostream>

using namespace std;

int partition(vector<int> v, int l, int r){
	// int pvt = v[(l+r)/2]; overflow
	int pvt = v[l+(r-l)/2];
	int i = l, j = r;
	while(i <= j){
		while(v[i] < pvt) i++;
		while(v[j] > pvt) j--;
		if(i <= j) swap(v[i++],v[j--]);
	}
	return j;
}
void qksort(vector<int> v, int l, int r){
	if(l < r){
		int x = partition(v, l, r);
		qksort(v, l, x);
		qksort(v, x + 1, r);
	}
}


int main(){
	const int B = 10;
	vector<int> v (B);
	for(int i = 0; i < B; i++)
		v[i] = rand();
	for(int i = 0; i < B; i++)
		cout << v[i] << endl;

	qksort(v, 0, v.size()-1);

	cout << "\nSorted\n";
	for(int i = 0; i < B; i++)
		cout << v[i] << endl;

	system("pause");
	return 0;
}
