#include <iostream>
#include <vector>

using namespace std;

pair<int, int> partition(vector<int> &v, int l, int r){
	// int pvt = v[(l+r)/2]; overflow
	int pvt = v[l+(r-l)/2];
	int i = l, j = r;
	while(i <= j){
		while(v[i] < pvt) i++;
		while(v[j] > pvt) j--;
		if(i <= j) swap(v[i++],v[j--]);
	}
	pair<int, int> ij;
	ij.first = i, ij.second = j;
	return ij;
}
int kth(vector<int> &v, int l, int r, int k){
	if(l < r){
		pair<int, int> ij = partition(v, l, r);
		int i = ij.first, j = ij.second;
		if(k<=i) return kth(v, l, j, k);
		if(k>=j) return kth(v, i, r, k);
		return v[k];
	}
}


int main(){
	int n, k;
	int A, B, C, D;
	cin >> n >> k;
	vector<int> a(n);
	cin >> a[0] >> a[1];
	
	if(n>2){
		cin >> A >> B >> C >> D;
		for(int i = 2; i < n; i++){
			a[i] = (A * a[i-2] + B * a[i-1] + C)%D;
		}
	}
	cout << kth(a, 0, a.size() - 1, k);
	return 0;
}
