#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void partition(vector<long long> &v, long long pvt, long long &i, long long &j){
	while(i <= j){
		while(v[i] < pvt) i++;
		while(v[j] > pvt) j--;
		if(i <= j) swap(v[i++],v[j--]);
	}
}
int kth(vector<long long> &v, long long l, long long r, long long k){
	long long pvt = v[l + (r - l)/2];
	long long i = l, j = r;
	partition(v, pvt, i, j);
	if(k<=j) return kth(v, l, j, k);
	if(k>=i) return kth(v, i, r, k);
	return v[k];
}

int main(){
	long long n, k;
	long long A, B, C, R;
	cin >> n >> k;
	vector<long long> a(n);
	cin >> a[0] >> a[1];
	cin >> A >> B >> C >> R;
	for(int i = 2; i < n; i++){
		a[i] = (A * a[i - 2] + B * a[i - 1] + C) % R;
	}
	cout << kth(a, 0, n - 1, k - 1);
	return 0;
}