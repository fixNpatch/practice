#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
#include<set>
#include<ctime>
#include<fstream>
#include<queue>

using namespace std;


int main()
{
	vector<int>p;
	int n, v1, v2;
	cin >> n >> v1 >> v2;
	v1--; v2--;
	vector<vector<int> >g(n);
	for (int i = 0; i<n; i++)
	{
		g[i].resize(n);
		for (int j = 0; j < n; j++)
			cin >> g[i][j];
	}
	vector<bool>used(n);
	used[v1] = true;
	vector<int>d(n, -1);
	d[v1] = 0;
	queue<int>q;
	q.push(v1);
	p.resize(n);
	while (!q.empty())
	{
		int u = q.front();
		q.pop();
		for (int i = 0; i<n; i++)
		{
			int v = i;
			if (g[u][v]>0 && !used[v])
			{
				d[v] = d[u] + 1;
				q.push(v);
				used[v] = true;
				p[v] = u;
			}
		}
	}
	printf("%d\n", d[v2]);
	vector<int>path;
	if (d[v2] > -1)
	{
		printf("%d ", v1+1);
		path.resize(d[v2]);
		int cur = v2, i = d[v2] - 1;
		while (cur != v1)
		{
			path[i] = cur;
			cur = p[cur];
			i--;
		}
	}
	for (int i = 0; i < d[v2]; i++)
		printf("%d ", path[i]+1);

	return 0;
}