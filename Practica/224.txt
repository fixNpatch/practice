#include <vector>
#include <cstdio>
#include <algorithm>
#include <iostream>
using namespace std;

bool bsearch(vector<int> &v, int x){
	int l = 0, mid, r = int(v.size())-1;
	while(r - l > 1){
		mid = l + (r - l)/2;
		v[mid] < x ? l = mid : r = mid;
	}
	for(int i = l; i <= r; i++)
		if(v[i] == x) return true;
	return false;
}

int main(){
	int n, m, cure;
	cin >> n >> m;
	vector<int> a(n);
	vector<int> b;
	for(int i = 0; i < n; i++)
		cin >> a[i];
	sort(a.begin(), a.end());
	a.erase(unique(a.begin(), a.end()), a.end());
	for(int i = 0; i < m; i++){
		cin >> cure;
		if(bsearch(a, cure) && !(bsearch(b, cure))){
			b.push_back(cure);
			sort(b.begin(), b.end());
		}
	}
	printf("%d\n", b.size());
	for(int i = 0; i < b.size(); i++)
		printf("%d ", b[i]);
	return 0;
}