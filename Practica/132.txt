#include <vector>
#include <iostream>
#include <string>
#include <cstdio>
using namespace std;

void heapify(vector<pair<string, int> > &v, int pos, int h, int &cnt){
	int j;
	while(2*pos+1 < h){
		j = 2*pos + 1;
		if((j + 1 < h) && (v[j+1] >= v[j])){
			j++;
		}
		if(v[j] > v[pos]){
			swap(v[j], v[pos]);
			pos = j;
			cnt++;
		}
		else break;
	}
}

void heapsort(vector<pair<string, int> > &v, int h, int &cnt){
	for (int i = h  - 1; i >= 0; i--)
    {
        heapify(v, i, h, cnt);
    }
	
    for (int i = h - 1; i > 1; i--)
	{
		swap(v[0], v[i]);
		heapify(v, 0, i, cnt);
	}
}

int main(){
	int n, d, h, cnt = 0;
	scanf("%d", &n);
	string s;
	vector<pair<string, int> > a;
	int * ans = new int[n];
	for(int i = 0; i < n; i++){
		cin >> s;
		a.push_back(pair<string, int>(s,i));
	}
	for (int i = n  - 1; i >= 0; i--)
    {
        heapify(a, i, n, cnt);
    }
	for(int i = 0; i < n;i++){
	  int pos = a[i].second;
	  ans[pos] = i+1;
	  }
	for(int i=0; i < n; i++){
		cout << ans[i] << endl;
	}
	return 0;
}