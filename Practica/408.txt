#include<iostream>
using namespace std;

pair <long long, long long> points[100];
inline long long min(long long a, long long b){
	return a < b ? a : b;
}

long long count(const long long x, const long long n){
	long long result = 0;
	for (int i = 0; i < n; i++)
		if (x >= points[i].first)
			result += min(x, points[i].second) - points[i].first + 1;
	return result;
}

int main(){
	int n;
	cin >> n;
	int k;
	cin >> k;
	k++;

	long long max = -2000000001;
	long long min = 2000000001;
	for (int i = 0; i < n; i++){
		cin >> points[i].first >> points[i].second;
		if(points[i].second > max)
			max = points[i].second;
		if(points[i].first < min)
			min = points[i].first;
	}

	long long l = min;
	long long r = max;
	long long mid;
	while(r - l > 1){
		mid = (r + l) / 2;
		(count(mid, n) < k) ? l = mid : r = mid;
	}
	if(count(l, n) >= k)
		cout << l;
	else if(count(r, n) >= k)
			cout << r;
	return 0;
}